name: Online score server CD

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login and push to container registry
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/online-score-server:latest vp-api
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/online-score-server:latest

      - name: Copy docker-compose.prod.yml file to vps
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          source: docker-compose.prod.yml
          target: /apps/online-score-server

      - name: Deploy using ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            cd /apps/online-score-server
            docker compose -f docker-compose.prod.yml down
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/online-score-server:latest
            echo "" > .env
            echo "DB_URL=${{ secrets.DB_URL }}" >> .env
            echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
            echo "PG_PORT=${{ secrets.PG_PORT }}" >> .env
            echo "PORT=${{ secrets.PORT }}" >> .env
            export $(grep -v '^#' .env | xargs)
            docker compose -f docker-compose.prod.yml up -d --build

